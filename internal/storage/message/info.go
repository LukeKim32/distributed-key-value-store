package message

const (
	FunctionExecutionTime       = "Get 레디스 클라이언트 소요 시간 %v"
	RedisNodeSelected           = "레디스 클라이언트(%s) 선택"
	FailOverVoteResult          = "클라이언트(%s) Failover 투표 결과 : (%d / %d)"
	PromotinSlaveStart          = "As %s failover, 마스터-승격 절차 시작 "
	PromotingSlaveNode          = "슬레이브(%s) 승격 중.."
	SlaveAsNewMaster            = "%s <= 새로운 마스터!"
	SlaveMappedToMaster         = "Redis Slave Node(%s) Mapped from Master Node(%s) Success"
	NodeConnectSuccess          = "Redis Node(%s) connection Success"
	HashSlotAssignResult        = "타겟 레디스(%s)에 할당된 해쉬 슬롯 범위 %d ~ %d"
	HashSlotAssignStart         = "레디스 클라이언트(%s) 해쉬 슬롯 할당 시작"
	HashSlotAssignFinish        = "레디스 클라이언트(%s) 해쉬 슬롯 할당 종료"
	RefreshedMasters            = "현재 마스터 : %s"
	RefreshedSlaves             = "현재 슬레이브 : %s"
	SlaveNodeInfo               = "RemoveSlaveFromList() : Passed @slaveNode's role : %s, address : %s"
	MasterNodeInfo              = "RemoveMasterFromList() : Passed @slaveNode's role : %s, address : %s"
	DeadRedisNodeInfo           = "Dead Redis Node info : %s %s"
	HashSlotRedistributeStart   = "죽은 레디스 클라이언트(%s)의 해쉬슬롯 재분배 시작"
	HashSlotRedistributeFinish  = "죽은 레디스 클라이언트(%s)의 해쉬슬롯 재분배 종료"
	StartToRequestToMonitors    = "모니터링 서버들에 요청 시작"
	WaitForResponseFromMonitors = "채널에서 응답 대기"
	ChannelResponseFromMonitor  = "Buffered 채널 응답 결과 : %s"
	RedisCheckedAlive           = "%s <= 살아있음"
	RedisCheckedDead            = "%s <= 죽었음"
	RequestTargetMonitor        = "요청 대상 : "
	ResponseFromTargetMonitor   = "응답 결과 - is alive : "
	PromotionSuccess            = "마스터 승격 성공 - 새로운 슬레이브(이전 마스터 %s) 컨테이너 재시작"
	MasterFound                 = "목표 마스터 발견"
	SlaveFound                  = "목표 슬레이브 발견"
	ConnectSlaveToMaster        = "새로운 슬레이브 (%s) ==연결 시작==> 마스터 (%s)"
	ReconnectSuccess            = "Redis Node(%s) 재연결 시도 성공"
	RedisRole                   = "%s의 역할 : %s"
	MigrateDataFromTo           = "%s에 원래 있던 (%s, %s) 를 다른 노드 %s 에.."
	CopyFromMasterToSlave       = "마스터 (%s)의 데이터 (%s, %s) ==복사==> 슬레이브 (%s)"
	StartSlaveAliveCheck        = "마스터(%s)의 슬레이브 생존 확인"
	SlaveIsAlive                = "투표결과 : 슬레이브(%s) 살아있음"
	StartReplicaiton            = "슬레이브로 Replicate 시작"
	EndReplication              = "슬레이브로 Replicate 종료"

	/* Data Log Related Messages */
	RecordDataLogStart  = "%s 노드에 데이터 수정사항 로그 저장"
	ReadDataLogStart    = "getLatestDataFromLog() : 노드(%s)의 데이터 로그 파일 읽기 시작"
	ReadDataLogEachLine = "readDataLogs() : data log file read result : %d %s %s %s"

	/* Monitor server Messages */
	NewConnectRequest = "monitorClient askConnect() : %s 노드에 대해 새로 연결 요청"

	ContainerStatus   = "RestartRedisContainer() : Redis container(%s) status : %s"
	ContainerRestart  = "RestartRedisContainer() : Redis container(%s) restart"
	TargetContainerIP = "getContainerWithIP() : target container IP : "
	ContainerFound    = "Container selected success - "
)
